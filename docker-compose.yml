version: "3.9"

# Services
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    command: --configFile=/etc/traefik/traefik.yml
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # The configuration file
      - ./traefik.yml:/etc/traefik/traefik.yml

  web:
    platform: "linux/amd64"
    build:
      context: ./web
      dockerfile: Dockerfile
    working_dir: /app
    image: matchmade-miniproject-web
    hostname: web.docker-compose
    labels:
      - "traefik.http.routers.frontend-service.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend-service.entrypoints=web"

  service:
    platform: "linux/amd64"
    build:
      context: ./service
      dockerfile: Dockerfile
    working_dir: /app
    image: matchmade-miniproject-service
    hostname: service.docker-compose
    labels:
      - "traefik.http.routers.service.rule=Host(`api.localhost`)"
      - "traefik.http.routers.service.entrypoints=web"
    depends_on:
      - database

  database:
    image: postgres:16.0
    volumes:
      - database:/var/lib/postgresql/data
    hostname: database.docker-compose
    environment:
      - POSTGRES_USER=matchmade
      - POSTGRES_PASSWORD=matchmade
      - POSTGRES_DB=matchmade

# Volumes
volumes:
  database:
    driver: local